{"version":3,"sources":["components/Bank-Account/Balance/Balance.module.css","components/Bank-Account/TransactionHistory/TransactionHistory.module.css","components/Bank-Account/Controls/Controls.module.css","components/Bank-Account/Controls/Controls.js","components/Bank-Account/Balance/Balance.js","components/Bank-Account/TransactionHistory/TransactionHistory.js","components/Bank-Account/Dashboard/Dashboard.js","components/App.js","index.js"],"names":["module","exports","Controls","state","value","handleChange","event","setState","target","handleClickDeposit","Number","props","onClickDeposit","handleClickWithdraw","onClickWithdraw","this","className","styles","controls","type","input","onChange","placeholder","button","onClick","Component","Balance","balance","income","expense","balance_downward","material_icons","balance_upward","balance_item","TransactionHistory","transactions","history","map","transaction","key","id","amount","date","Dashboard","inputTransactions","infoErrorInput","alert","infoErrorBalance","TotalFunds","reduce","acc","deposit","withdraw","onClickButtonDeposit","shortid","generate","Date","toLocaleString","prevState","onClickButtonWithdraw","keptTransactions","localStorage","getItem","keptBalance","JSON","parse","prevProps","setItem","stringify","funds","dashboard","defaultProps","App","ReactDOM","render","document","querySelector"],"mappings":"uIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,iBAAmB,kCAAkC,eAAiB,gCAAgC,eAAiB,kC,mBCA5KD,EAAOC,QAAU,CAAC,QAAU,sC,2ECA5BD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,OAAS,2B,oLCG5EC,E,2MAMnBC,MAAQ,CACNC,MAAO,I,EAGTC,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZH,MAAOE,EAAME,OAAOJ,S,EAIxBK,mBAAqB,WACnB,IAAML,EAAQM,OAAO,EAAKP,MAAMC,OAChC,EAAKO,MAAMC,eAAeR,GAE1B,EAAKG,SAAS,CACZH,MAAO,M,EAIXS,oBAAsB,WACpB,IAAMT,EAAQM,OAAO,EAAKP,MAAMC,OAChC,EAAKO,MAAMG,gBAAgBV,GAE3B,EAAKG,SAAS,CACZH,MAAO,M,wEAID,IACAA,EAAUW,KAAKZ,MAAfC,MACR,OACE,6BAASY,UAAWC,IAAOC,UACzB,2BACEC,KAAK,SACLH,UAAWC,IAAOG,MAClBC,SAAUN,KAAKV,aACfD,MAAOA,EACPkB,YAAY,qBAEd,4BACEH,KAAK,SACLH,UAAWC,IAAOM,OAClBC,QAAST,KAAKN,oBAHhB,UAKU,KACA,IACV,4BACEU,KAAK,SACLH,UAAWC,IAAOM,OAClBC,QAAST,KAAKF,qBAHhB,WAKW,KACD,S,GA1DoBY,a,gBCkBvBC,EAlBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAQC,EAApB,EAAoBA,QAApB,OACd,6BAASb,UAAWC,IAAOU,SACzB,0BAAMX,UAAWC,IAAOa,kBACtB,uBAAGd,UAAWC,IAAOc,gBAArB,oBADF,IAC6DH,EAD7D,IACsE,KAC9D,IACR,0BAAMZ,UAAWC,IAAOe,gBACtB,uBAAGhB,UAAWC,IAAOc,gBAArB,kBADF,IAC2DF,EAD3D,IACqE,KAC7D,IACR,0BAAMb,UAAWC,IAAOgB,cAAxB,aAAiDN,EAAjD,MAAmE,M,iBCsBxDO,EA9BY,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACzB,2BAAOnB,UAAWC,IAAOmB,SACvB,+BACE,4BACE,6CADF,IACyB,wCADzB,IAC2C,sCAAgB,KACrD,KACC,IACT,+BACG,IACAD,EAAaE,KAAI,SAAAC,GAAW,OAC3B,wBAAIC,IAAKD,EAAYE,IACnB,gCAAMF,EAAYnB,KAAlB,KADF,IACgC,gCAAMmB,EAAYG,OAAlB,KAAgC,IAC9D,gCAAMH,EAAYI,KAAlB,KAA8B,QAE9B,KACG,M,mPCXQC,E,2MAgBnBxC,MAAQ,CACNiC,QAAS,EAAKzB,MAAMiC,kBACpBjB,QAAS,G,EAyBXkB,eAAiB,kBAAMC,MAAM,gN,EAE7BC,iBAAmB,kBACjBD,MAAM,sS,EAERE,WAAa,WACX,OAAO,EAAK7C,MAAMiC,QAAQa,QACxB,SAACC,EAAKZ,GACJ,O,yVAAO,CAAP,GACKY,EADL,eAEGZ,EAAYnB,KAAO+B,EAAIZ,EAAYnB,MAAQmB,EAAYG,WAG5D,CACEU,QAAS,EACTC,SAAU,K,EAKhBC,qBAAuB,SAAAZ,GACrB,IAAMH,EAAc,CAClBE,GAAIc,IAAQC,WACZpC,KAAM,UACNsB,OAAQ/B,OAAO+B,GACfC,MAAM,IAAIc,MAAOC,kBAEJ,IAAXhB,EACF,EAAKI,iBACIJ,EAAS,IAClB,EAAKlC,UAAS,SAAAJ,GAAK,MAAK,CACtBiC,QAAQ,GAAD,mBAAMjC,EAAMiC,SAAZ,CAAqBE,QAG9B,EAAK/B,UAAS,SAAAmD,GAAS,MAAK,CAC1B/B,QAASjB,OAAOgD,EAAU/B,SAAWjB,OAAO+B,S,EAKlDkB,sBAAwB,SAAAlB,GACtB,IAAMH,EAAc,CAClBE,GAAIc,IAAQC,WACZpC,KAAM,WACNsB,OAAQ/B,OAAO+B,GACfC,MAAM,IAAIc,MAAOC,kBAEfhB,EAAS,EAAKtC,MAAMwB,QACtB,EAAKoB,mBACe,IAAXN,EACT,EAAKI,iBACIJ,EAAS,GAAKA,GAAU,EAAKtC,MAAMwB,UAC5C,EAAKpB,UAAS,SAAAmD,GAAS,MAAK,CAC1B/B,QAAS+B,EAAU/B,QAAUc,MAE/B,EAAKlC,UAAS,SAAAJ,GAAK,MAAK,CACtBiC,QAAQ,GAAD,mBAAMjC,EAAMiC,SAAZ,CAAqBE,U,mFA7EhC,IAAMsB,EAAmBC,aAAaC,QAAQ,WACxCC,EAAcF,aAAaC,QAAQ,WAErCF,GACF7C,KAAKR,SAAS,CAAE6B,QAAS4B,KAAKC,MAAML,KAElCG,GACFhD,KAAKR,SAAS,CAAEoB,QAASqC,KAAKC,MAAMF,O,yCAIrBG,EAAWR,GAAY,IAAD,EACV3C,KAAKZ,MAA1BiC,EAD+B,EAC/BA,QAAST,EADsB,EACtBA,QACb+B,EAAUtB,UAAYA,GACxByB,aAAaM,QAAQ,UAAWH,KAAKI,UAAUhC,IAE7CsB,EAAU/B,UAAYA,GACxBkC,aAAaM,QAAQ,UAAWH,KAAKI,UAAUzC,M,+BAiEzC,IAAD,EACsBZ,KAAKZ,MAA1BiC,EADD,EACCA,QAAST,EADV,EACUA,QACX0C,EAAQtD,KAAKiC,aAEnB,OACE,yBAAKhC,UAAWC,IAAOqD,WACrB,kBAAC,EAAD,CACE1D,eAAgBG,KAAKsC,qBACrBvC,gBAAiBC,KAAK4C,wBACrB,IACH,kBAAC,EAAD,CACEhC,QAASA,EACTC,OAAQyC,EAAMlB,QACdtB,QAASwC,EAAMjB,WACd,IACH,kBAAC,EAAD,CAAoBjB,aAAcC,IAAY,S,GAvHfX,aAAlBkB,EAYZ4B,aAAe,CACpB3B,kBAAmB,IClBvB,IACe4B,EADH,kBAAM,kBAAC,EAAD,O,MCElBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.e838ed06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__1yAHa\",\"balance_downward\":\"Balance_balance_downward__2FL6a\",\"balance_upward\":\"Balance_balance_upward__1-N4f\",\"material_icons\":\"Balance_material_icons__2fuTU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__39Poo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__TDAqC\",\"input\":\"Controls_input__1lal9\",\"button\":\"Controls_button__1st4A\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Controls.module.css';\r\n\r\nexport default class Controls extends Component {\r\n  static propTypes = {\r\n    onClickDeposit: PropTypes.func.isRequired,\r\n    onClickWithdraw: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    value: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleClickDeposit = () => {\r\n    const value = Number(this.state.value);\r\n    this.props.onClickDeposit(value);\r\n\r\n    this.setState({\r\n      value: '',\r\n    });\r\n  };\r\n\r\n  handleClickWithdraw = () => {\r\n    const value = Number(this.state.value);\r\n    this.props.onClickWithdraw(value);\r\n\r\n    this.setState({\r\n      value: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <section className={styles.controls}>\r\n        <input\r\n          type=\"number\"\r\n          className={styles.input}\r\n          onChange={this.handleChange}\r\n          value={value}\r\n          placeholder=\"Enter amount ...\"\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          className={styles.button}\r\n          onClick={this.handleClickDeposit}\r\n        >\r\n          Deposit{' '}\r\n        </button>{' '}\r\n        <button\r\n          type=\"button\"\r\n          className={styles.button}\r\n          onClick={this.handleClickWithdraw}\r\n        >\r\n          Withdraw{' '}\r\n        </button>{' '}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Balance.module.css';\r\n\r\nconst Balance = ({ balance, income, expense }) => (\r\n  <section className={styles.balance}>\r\n    <span className={styles.balance_downward}>\r\n      <i className={styles.material_icons}> arrow_downward </i> {income}${' '}\r\n    </span>{' '}\r\n    <span className={styles.balance_upward}>\r\n      <i className={styles.material_icons}> arrow_upward </i> {expense}${' '}\r\n    </span>{' '}\r\n    <span className={styles.balance_item}> Balance: {balance}$ </span>{' '}\r\n  </section>\r\n);\r\n\r\nBalance.propTypes = {\r\n  balance: PropTypes.number.isRequired,\r\n  income: PropTypes.number.isRequired,\r\n  expense: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Balance;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ transactions }) => (\r\n  <table className={styles.history}>\r\n    <thead>\r\n      <tr>\r\n        <th> Transaction </th> <th> Amount </th> <th> Date </th>{' '}\r\n      </tr>{' '}\r\n    </thead>{' '}\r\n    <tbody>\r\n      {' '}\r\n      {transactions.map(transaction => (\r\n        <tr key={transaction.id}>\r\n          <td> {transaction.type} </td> <td> {transaction.amount} </td>{' '}\r\n          <td> {transaction.date} </td>{' '}\r\n        </tr>\r\n      ))}{' '}\r\n    </tbody>{' '}\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  transactions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.number.isRequired,\r\n      date: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport Controls from '../Controls/Controls';\r\nimport Balance from '../Balance/Balance';\r\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\r\nimport styles from '../../../stylesBank.css';\r\n\r\nexport default class Dashboard extends Component {\r\n  static propTypes = {\r\n    inputTransactions: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        type: PropTypes.string.isRequired,\r\n        amount: PropTypes.number.isRequired,\r\n        date: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n    ),\r\n  };\r\n\r\n  static defaultProps = {\r\n    inputTransactions: [],\r\n  };\r\n\r\n  state = {\r\n    history: this.props.inputTransactions,\r\n    balance: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const keptTransactions = localStorage.getItem('history');\r\n    const keptBalance = localStorage.getItem('balance');\r\n\r\n    if (keptTransactions) {\r\n      this.setState({ history: JSON.parse(keptTransactions) });\r\n    }\r\n    if (keptBalance) {\r\n      this.setState({ balance: JSON.parse(keptBalance) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { history, balance } = this.state;\r\n    if (prevState.history !== history) {\r\n      localStorage.setItem('history', JSON.stringify(history));\r\n    }\r\n    if (prevState.balance !== balance) {\r\n      localStorage.setItem('balance', JSON.stringify(balance));\r\n    }\r\n  }\r\n\r\n  infoErrorInput = () => alert('Введите сумму для проведения операции!');\r\n\r\n  infoErrorBalance = () =>\r\n    alert('На счету недостаточно средств для проведения операции!');\r\n\r\n  TotalFunds = () => {\r\n    return this.state.history.reduce(\r\n      (acc, transaction) => {\r\n        return {\r\n          ...acc,\r\n          [transaction.type]: acc[transaction.type] + transaction.amount,\r\n        };\r\n      },\r\n      {\r\n        deposit: 0,\r\n        withdraw: 0,\r\n      },\r\n    );\r\n  };\r\n\r\n  onClickButtonDeposit = amount => {\r\n    const transaction = {\r\n      id: shortid.generate(),\r\n      type: 'deposit',\r\n      amount: Number(amount),\r\n      date: new Date().toLocaleString(),\r\n    };\r\n    if (amount === 0 || '') {\r\n      this.infoErrorInput();\r\n    } else if (amount > 0) {\r\n      this.setState(state => ({\r\n        history: [...state.history, transaction],\r\n      }));\r\n\r\n      this.setState(prevState => ({\r\n        balance: Number(prevState.balance) + Number(amount),\r\n      }));\r\n    }\r\n  };\r\n\r\n  onClickButtonWithdraw = amount => {\r\n    const transaction = {\r\n      id: shortid.generate(),\r\n      type: 'withdraw',\r\n      amount: Number(amount),\r\n      date: new Date().toLocaleString(),\r\n    };\r\n    if (amount > this.state.balance) {\r\n      this.infoErrorBalance();\r\n    } else if (amount === 0 || '') {\r\n      this.infoErrorInput();\r\n    } else if (amount > 0 && amount <= this.state.balance) {\r\n      this.setState(prevState => ({\r\n        balance: prevState.balance - amount,\r\n      }));\r\n      this.setState(state => ({\r\n        history: [...state.history, transaction],\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { history, balance } = this.state;\r\n    const funds = this.TotalFunds();\r\n\r\n    return (\r\n      <div className={styles.dashboard}>\r\n        <Controls\r\n          onClickDeposit={this.onClickButtonDeposit}\r\n          onClickWithdraw={this.onClickButtonWithdraw}\r\n        />{' '}\r\n        <Balance\r\n          balance={balance}\r\n          income={funds.deposit}\r\n          expense={funds.withdraw}\r\n        />{' '}\r\n        <TransactionHistory transactions={history} />{' '}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Dashboard from './Bank-Account/Dashboard/Dashboard';\r\n\r\nconst App = () => <Dashboard />;\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './styles.css';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}